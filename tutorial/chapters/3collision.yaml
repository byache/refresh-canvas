order: 3

library: |
  var dx = 2;
  var dy = 4;
  var WIDTH;
  var HEIGHT;
  var ctx;
  
  function init() {
    // cette fonction permet d'initialiser et de démarer le jeu
    ctx = $('#canvas')[0].getContext("2d");
    WIDTH = $("#canvas").width();
    HEIGHT = $("#canvas").height();
  }
  
  function loopdraw() {
    // la ligne suivante permet d'exécuter la fonction "draw" toutes les 10 millisecondes !
    return setInterval(draw, 10);
  }
  
   function circle(x,y,r,color) {
    //cette fonction permet de tracer un disque (cercle plein), de centre (x,y) et de rayon r
    //pour mettre la couleur, utiliser le mot anglais entre guillemets simples, 
    //par exemple 'red' pour la couleur rouge
    ctx.beginPath();
    ctx.arc(x, HEIGHT-y, r, 0, Math.PI*2, true);
    ctx.closePath();
    ctx.fillStyle = color;
    ctx.fill();
  }
  
  function rect(x,y,w,h,color) {
    ctx.beginPath();
    ctx.rect(x-w/2,HEIGHT-(y+h/2),w,h);
    ctx.closePath();
    ctx.fillStyle = color;
    ctx.fill();
  }
  
  function clear() {
    ctx.clearRect(0, 0, WIDTH, HEIGHT);
    ctx.fillStyle='white';
    ctx.rect(0,0,WIDTH,HEIGHT);
  }
  
  function alea(a,b) {
    //cette fonction renvoie un nombre entier au hasard compris entre a et b (inclus)
    return Math.floor(Math.random()*(b+1-a)+a);
  }
  
  function repeatdraw(n,t) {
    //répéter draw n fois avec une attente de t ms à chaque fois
    var rep=0;
    var time=0;
    while( rep < n){
      time=rep*t;
      setTimeout(draw,time);
      rep++;
    }      
  }  
  
  function axes() {
    ctx.beginPath();
    ctx.moveTo(5,HEIGHT);
    ctx.lineTo(5,0);
    ctx.lineTo(0,5);
    ctx.moveTo(10,5);
    ctx.lineTo(5,0);
    ctx.moveTo(0,HEIGHT-5);
    ctx.lineTo(WIDTH,HEIGHT-5);
    ctx.lineTo(WIDTH-5,HEIGHT);
    ctx.moveTo(WIDTH-5,HEIGHT-10);
    ctx.lineTo(WIDTH,HEIGHT-5);
    ctx.stroke();
    ctx.strokeText("300",10,10);
    ctx.strokeText("300",WIDTH-20,HEIGHT-10);
    ctx.strokeText("0",10,HEIGHT-10);
    ctx.endPath();
  }
  
  function explode(cx,cy,color){
    // Cette fonction affiche une explosion centrée au point de 
    // coordonnées (x,y).
    // la couleur est 'color' : par exemple, pour avoir du orange, 
    // indiquer 'orange'.
    var spikes=13;
    var outerRadius=30;
    var innerRadius=10;
    var rot=Math.PI/2*3;
    cy=HEIGHT-cy
    var xx=cx;
    var yy=cy;
    var step=Math.PI/spikes;
    ctx.beginPath();
    ctx.moveTo(cx,cy-outerRadius);
    for(i=0;i<spikes;i++){
      xx=cx+Math.cos(rot)*outerRadius;
      yy=cy+Math.sin(rot)*outerRadius;
      ctx.lineTo(xx,yy);
      rot+=step;
      xx=cx+Math.cos(rot)*innerRadius;
      yy=cy+Math.sin(rot)*innerRadius;
      ctx.lineTo(xx,yy);
      rot+=step;
    }
    ctx.lineTo(cx,cy-outerRadius);
    ctx.stroke();
    ctx.closePath();
    ctx.fillStyle=color;
    ctx.fill();
  }
  
code: |
  var h = 2;
  //centre du carré rouge
  var x1 = 150;
  var y1 = 300;
  //centre du rectangle vert
  var x2=100;
  var y2=30;

  function draw() {
    clear();
    rect(x1, y1, 10, 10,'red');
    if(y1 > 0)
      y1 = y1 - h;
    else{//si le carré rouge atteint le bord, on le remet en bas, avec un "x" aléatoire
      y1 = 300;
      x1 = alea(0,300);
    }
  
    rect(x2,y2,30,10,'green');
    if(x2 > 0)
      x2 = x2 - h;
    else //si le rectangle vert atteint le bord, on le fait réapparaître sur le bord opposé
      x2 = x2 + 300;
  }
  
  init(); //on initialise le jeu
  loopdraw(); //on répète la fonction "draw" indéfiniment...

explain_before: |
  Il faudrait détecter quand le carré rouge touche le rectangle vert...

explain_after: |
  <p>Travail (activité en classe entière) :
  <br/>- étudier une stratégie permettant de détecter si deux rectangles sont en collision
  <br/>- coder une fonction "intersect(a1,b1,a2,b2)" qui détecte si les intervalles [a1 b1] et [a2 b2] ont une intersection vide
  <br/>- coder une fonction "collision(x1,x2,w1,h1,x2,y2,w2,h2)" qui détecte si deux rectangles sont en collision
  <br/>- déclencher une explosion si le carré rouge atteint le rectangle vert...

comment:  |
  Travail à faire avec un vidéo-projecteur.
  <p>Expliquer les différents sens de l'égalité : "=" et "==". 
  <p>Les fonctions peuvent être mises n'importe où dans le code (sauf dans une autre fonction !)
  <p>Pour s'amuser avec les fonctions, il y a la page suivante...
  
  <p>solution : 
  <p>function intersect(a1,b1,a2,b2){
  <br/>  //renvoie "false" si l'intersection de [a1 a2] et [b1 b2] est vide
  <br/>  if(b1 &lt; a2  &#124; &#124; b2 &lt; a1) return false;
  <br/>  else return true;
  <br/>}

  <p>function collision(x1,y1,w1,h1,x2,y2,w2,h2){
  <br/>  //renvoie "true" si les deux rectangles se rencontrent
  <br/>  if( intersect(x1-w1/2,x1+w1/2,x2-w2/2,x2+w2/2) && intersect(y1-h1/2,y1+h1/2,y2-h2/2,y2+h2/2) ) return true;
  <br/>  else return false;
  <br/>}
  
  <p>et :
  <p>  if (collision(x1,y1,10,10,x2,y2,30,10)) explode(x1,y1,'red');
  
name: '3collision'

title: 'Intervalles et collisions'